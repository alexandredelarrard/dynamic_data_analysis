# -*- coding: utf-8 -*-
"""
Created on Fri Mar 30 10:03:57 2018

@author: User
"""

import pandas as pd
import os

def dico():
    ##### id from atp database : id from website
    match_tourney_id = {"1990-339":"1990-7308","1991-339":"1991-7308","1992-339":"1992-7308","1993-339":"1993-7308","1994-339":"1994-7308","1995-339":"1995-7308","1996-339":"1996-7308","1997-339":"1997-7308","1998-339":"1998-7308","1999-339":"1999-7308","2000-339":"2000-7308","2001-339":"2001-7308","2002-339":"2002-7308","2003-339":"2003-7308","2004-339":"2004-7308","2005-339":"2005-7308","2006-339":"2006-7308","2007-339":"2007-7308","2008-339":"2008-7308",
                         "1990-305": "1990-6120","1991-305": "1991-6120","1992-305": "1992-6120","1993-305": "1993-6120","1994-305": "1994-6120","1995-305": "1995-6120",
                         "1991-436": "1991-717","1992-436": "1992-717","1993-436": "1993-717","1990-436": "1990-717",
                         "1990-741": "1990-7310","1991-741": "1991-7310","1992-741": "1992-7310","1993-741": "1993-7310","1994-741": "1994-7310",
                         "1996-375": "1996-7309","1990-375": "1990-7309","1992-375": "1992-7309","1993-375": "1993-7309","1994-375": "1994-7309","1999-375": "1999-7309","1995-375": "1995-7309","1998-375": "1998-7309","2001-375": "2001-7309","2000-375": "2000-7309","1997-375": "1997-7309","1991-375": "1991-7309","2007-375": "2007-7309","2002-375": "2002-7309","2009-375": "2009-7309","2003-375": "2003-7309","2004-375": "2004-7309","2008-375": "2008-7309","2006-375": "2006-7309","2005-375": "2005-7309",
                         "1992-322": "1992-7300",
                         "1997-322": "1997-7301",
                         "1996-322": "1996-7301",
                         "1998-322": "1998-7301",
                         "1993-747": "1993-7307","1994-747": "1994-7307","1995-747": "1995-7307","1996-747": "1996-7307","1997-747": "1997-7307",
                         "1993-506": "1993-7304","1994-506": "1994-7304","1995-506": "1995-7304",
                         "1995-573": "1995-7306","1996-573": "1996-7306","1997-573": "1997-7306","1998-573": "1998-7306","1999-573": "1999-7306","2000-573": "2000-7306","2001-573": "2001-7306","2002-573": "2002-7306",
                         "2011-6406": "2011-605","2012-6406": "2012-605","2013-6406": "2013-605", #"2014-6406": "2014-605","2015-6406": "2015-605",
                         "2016-M020": "2016-339","2017-M020": "2017-339","2018-M020": "2018-339",
                         "2016-0891": "2016-891","2017-0891": "2017-891","2018-0891": "2018-891",
                         "2016-0451": "2016-451","2017-0451": "2017-451","2018-0451": "2018-451",
                         "2016-0301": "2016-301","2017-0301": "2017-301","2018-0301": "2018-301",
                         "2016-M001": "2016-338","2017-M001": "2017-338","2018-M001": "2018-338",
                         "2016-0375": "2016-375","2017-0375": "2017-375","2018-0375": "2018-375",
#                         "2016-0402": "2016-402","2017-0402": "2017-402","2018-0402": "2018-402",
                         "2016-0407": "2016-407","2017-0407": "2017-407","2018-0407": "2018-407",
                         "2016-0499": "2016-499","2017-0499": "2017-499","2018-0499": "2018-499",
                         "2016-0496": "2016-496","2017-0496": "2017-496","2018-0496": "2018-496",
                         #"2016-M052": "2016-6932","2017-M052": "2017-6932","2018-M052": "2018-6932",
                         "2016-M004": "2016-807","2017-M004": "2017-807","2018-M004": "2018-807",
                         "2016-0891": "2016-891","2017-0891": "2017-891","2018-0891": "2018-891",
                         "2016-M015": "2016-747","2017-M015": "2017-747","2018-M015": "2018-747",
                         "2016-0568": "2016-568","2017-0568": "2017-568","2018-0568": "2018-568",
                         "2016-M016": "2016-741","2017-M016": "2017-741","2018-M016": "2018-741",
                         "2016-M010": "2016-440","2017-M010": "2017-440","2018-M010": "2018-440",
                         "2016-M009": "2016-416","2017-M009": "2017-416","2018-M009": "2018-416",
                         "2016-M021": "2016-1536","2017-M021": "2017-1536","2018-M021": "2018-1536",
                         "2016-0410": "2016-410","2017-0410": "2017-410","2018-0410": "2018-410",
                         "2016-0352": "2016-352","2017-0352": "2017-352","2018-0352": "2018-352",
                         "2016-0337": "2016-337","2017-0337": "2017-337","2018-0337": "2018-337",
                         "2016-0328": "2016-328","2017-0328": "2017-328","2018-0328": "2018-328",
                         "2016-0429": "2016-429","2017-0429": "2017-429","2018-0429": "2018-429",
                         "2016-M014": "2016-438","2017-M014": "2017-438","2018-M014": "2018-438",
                         "2016-0329": "2016-329","2017-0329": "2017-329","2018-0329": "2018-329",
                         "2016-0341": "2016-341","2017-0341": "2017-341","2018-0341": "2018-341",
                         "2016-M024": "2016-422","2017-M024": "2017-422","2018-M024": "2018-422",
                         "2016-0421": "2016-421","2017-0421": "2017-421","2018-0421": "2018-421",
                         "2016-M035": "2016-418","2017-M035": "2017-418","2018-M035": "2018-418",
                         "2016-0439": "2016-439","2017-0439": "2017-439","2018-0439": "2018-439",
                         "2016-0319": "2016-319","2017-0319": "2017-319","2018-0319": "2018-319",
                         "2016-0314": "2016-314","2017-0314": "2017-314","2018-0314": "2018-314",
                         "2016-0315": "2016-315","2017-0315": "2017-315","2018-0315": "2018-315",
                         "2016-0414": "2016-414","2017-0414": "2017-414","2018-0414": "2018-414",
                         "2016-0316": "2016-316","2017-0316": "2017-316","2018-0316": "2018-316",
                         "2016-0741": "2016-741","2017-0741": "2017-741","2018-0741": "2018-741",
                         "2016-0311": "2016-311","2017-0311": "2017-311","2018-0311": "2018-311",
                         "2016-0500": "2016-500","2017-0500": "2017-500","2018-0500": "2018-500",
                         "2016-0321": "2016-321","2017-0321": "2017-321","2018-0321": "2018-321",
                         "2016-0322": "2016-322","2017-0322": "2017-322","2018-0322": "2018-322",
                         "2016-0308": "2016-308","2017-0308": "2017-308","2018-0308": "2018-308",
                         "2016-0773": "2016-773","2017-0773": "2017-773","2018-0773": "2018-773",
                         "2016-0425": "2016-425","2017-0425": "2017-425","2018-0425": "2018-425",
                         "2016-0360": "2016-360","2017-0360": "2017-360","2018-0360": "2018-360",
                         "2016-0717": "2016-717","2017-0717": "2017-717","2018-0717": "2018-717",
                         "2016-M007": "2016-403","2017-M007": "2017-403","2018-M007": "2018-403",
                         "2016-M006": "2016-404","2017-M006": "2017-404","2018-M006": "2018-404",
                         "2016-0533": "2016-533","2017-0533": "2017-533","2018-0533": "2018-533",
                         "2016-0495": "2016-495","2017-0495": "2017-495","2018-0495": "2018-495",
                         
                         "1991-717": "1991-346","1992-717": "1992-346","1993-717": "1993-346",
                         "2016-0506" : "2016-506",      "2017-0506" : "2017-506",
                         "2002-782" : "2002-421",
                         "2017-0605" :"2017-311", "2016-0605" : "2016-311"
                         }
    
    
    
    return match_tourney_id


def merge_tourney(data):

    #### mrge with tournament database
    
#    
#    tournament["key"] = tournament["tourney_name"].str.lower() + "-"+ tournament["tourney_year"].astype(str)
#    
#    tt = data[["tourney_name", "tourney_id"]].drop_duplicates()
#    tt["year"] = list(list(zip(*tt["tourney_id"].str.split("-")))[0])
#    t = pd.merge(tournament, tt, on="key",how = "left")
#    t.to_csv(os.environ["DATA_PATH"] + "/clean_datasets/tournament/tourney_v2.csv",index= False)
    
    


pd.isnull(data_merge).sum()
miss= data_merge.loc[pd.isnull(data_merge["tourney_id_atp"])][["Date", "tourney_name", "tourney_id_atp", "tourney_id", "tourney_level"]]
miss = miss.drop_duplicates(["Date", "tourney_name", "tourney_id_x", "tourney_level"])   